#TMUX configuration file
#Michael Dombrowski
#created 5/11/17


#######################################
#          Remapping/Binding          #
#######################################
#{{{
    #remap prefix key from Ctrl-b to Ctrl-a
    unbind-key C-b
    #-g option makes global change
    set-option -g prefix C-a
    #I think line 3 here is needed for nested sessions, I'm following blindly here
    bind-key C-a send-prefix

    #open new windows after current, not at end
    unbind-key c        ;       bind-key c new-window -a -t *

    #better splitting than " and %
    #make panes open in current dir
    bind-key v split-window -h -c '#{pane_current_path}'
    bind-key h split-window -v -c '#{pane_current_path}'

    #easier pane movement with Alt-<vim movement>
    #-n option says prefix is not needed
    # O man, a big 'ol switchup
    bind-key -n C-h select-pane -L
    bind-key -n C-l select-pane -R
    bind-key -n C-k select-pane -U
    bind-key -n C-j select-pane -D
    # bind-key -n M-h select-pane -L
    # bind-key -n M-l select-pane -R
    # bind-key -n M-k select-pane -U
    # bind-key -n M-j select-pane -D

    #easier pane resize with Ctrl-<vim movement>
    #bind-key -n C-k resize-pane -U
    #bind-key -n C-j resize-pane -D
    #bind-key -n C-h resize-pane -L
    #bind-key -n C-l resize-pane -R

    #bind <Alt>-Shift-(q/e) to change windows
    bind-key -n M-q previous-window
    bind-key -n M-e next-window

    #make vi key bindings in copy mode
    setw -g mode-keys vi
    #unbind-key -T copy-mode-vi r      ;       bind-key -T copy-mode-vi r rectangle-toggle
    #unbind-key -T copy-mode-vi Space  ;       bind-key -T copy-mode-vi v begin-selection
    #unbind-key -T copy-mode-vi Enter  ;       bind-key -T copy-mode-vi y copy-selection

    #get rid of this mouse nonsense
    set-option -g mouse off

    #ESC is killing my flow in vim
    #apparently tmux waits for esc seq
    set -s escape-time 0

    #quick edit todo
    bind-key e new-window "vim ~/.todo"
    #quick sett window
    bind-key s new-window -n "sett" "sett"
    #quick sleep
    #bind-key s run-shell "systemctl suspend"
    #quick lock
    #unbind-key l        ;       bind-key l detach-client \; run-shell "echo "EXIT""
#}}}

#######################################
#             Status Bar              # 
#######################################
#{{{
    #set bg and fg colour scheme
    set-option -g status-bg magenta
    set-option -g status-fg white

    #make status bar refresh every 60 seconds instead of 15
    set-option -g status-interval 60
    #prevent dumb truncation of my execessive status
    set-option -g status-right-length 90

    #status vars
    #essid="$(iwconfig wlp3s0 | grep wlp3s0 | sed 's/^.*ESSID://' | sed 's/^.*"//' | sed 's/\/24.*$//')"

    #make right side of status bar have git branch, batt, and time/date
    set-option -g status-right "#[fg=green,bold]#(~/.tmux/ip)#[fg=white,bold] | #[fg=yellow,bold]#(~/.tmux/ac_check)#(~/.tmux/bat)%#[fg=white,bold] | #[fg=cyan,bold]%m/%d/%Y #[fg=cyan,bold]%I:%M %p"
    #[fg=green,bold][[#(git branch) branch ]] for git branch,
    #   I don't use git branching enough for this to make sense
#}}}

#######################################
#           Miscellaneous             # 
#######################################
#{{{
    #prevent auto-renaming of windows, I want my names
    set-option -g allow-rename off
    #quick sourcing of this file '~.tmux.conf' for quick setting edits
    #second phrase prints message at status line to let me know it worked
    bind-key r source-file ~/.tmux/conf \; display-message "tmux.conf reloaded."

    #vim-tmux-navigator things
    #5 commands are up, left, down, right, and previous panes
    is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    #bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    #bind-key -T copy-mode-vi C-\ select-pane -l
#}}}

# vim: set foldmethod=marker:
